name: 1-Checkout-Build-Artifact

# This workflow will checkout the code, ZIP the Python file, and create an artifact for use in following workflows.
on:
  # Enables manual runs
  workflow_dispatch:
  # Runs "Every day at 4:05" (see https://crontab.guru)
  schedule:
  - cron: "5 4 * * *"

jobs:
  Checkout-Artifact-Scan:
    runs-on: [ubuntu-latest]
    steps:

# Checkout
      - uses: actions/checkout@v2

# Handy during testing to check the file you expect is actually there 
      - name: Create application artifact
        run: |
         zip petstore-api-python.zip api.py requirements.txt

# Handy during testing to check the file you expect is actually there 
      - name: Confirm artifact exists on drive
        run: |
         ls -la
         
# Use the UploadAndScan action to submit the artifact for scanning for Policy
      - name: Veracode Upload and Scan Action Step - Policy
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan_policy
        with:
          appname: 'PetstoreAPI-Python-GitHub'
          createprofile: true
          version: '${{ github.run_id }}'
          criticality: High
          filepath: 'petstore-api-python.zip'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          teams: 'ClintPollock-DemoApps2023'
        continue-on-error: true

# Use the UploadAndScan action to submit the artifact for scanning for SandBox
      - name: Veracode Upload and Scan Action Step - Sandbox
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan_sandbox
        with:
          appname: 'PetstoreAPI-Python-GitHub'
          createprofile: false
          createsandbox: true
          sandboxname: DailyBuild
          version: '${{ github.run_id }}'
          criticality: High
          filepath: 'petstore-api-python.zip'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          teams: 'ClintPollock-DemoApps2023'
        continue-on-error: true

      - name: SCA Agent Repo Scan
        env: 
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s scan
                
      - name: SCA Agent Container Scan
        env: 
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s scan --image veracodedemolabs/petstore_api_python_github:latest
 
 # Workflow to run DAST Scan against QA server.  We use the veracode/api-signing image for this.
  Submit-DAST-Scan:
    runs-on: ubuntu-latest
    steps:            
# Checkout
      - uses: actions/checkout@v2
      
# Update the DAST Scan Name to be uniuqe using SED command         
      - name: Update DAST config file with uniuqe scan name
        run: |
         NOW=$(date +"%m-%d-%Y-%T")
         sed -i 's/Petstore_API_Python_Github/Petstore_API_Python_Github-'${NOW}'/g' vc-dast-config.json

# Visual confirmation of the scan submission details
      - name: Display DAST config file with uniuqe scan name
        run: |
          cat vc-dast-config.json
 
# DAST scan submission using the DAST API 
      - name: Submit Veracode DAST Scan
        run: |
         pip install veracode-api-signing
         export VERACODE_API_KEY_ID=${{ secrets.VERACODE_API_ID }}
         export VERACODE_API_KEY_SECRET=${{ secrets.VERACODE_API_KEY }}
         http --auth-type=veracode_hmac POST "https://api.veracode.com/was/configservice/v1/analyses?job_options=run_verification=false&scan_type=API_SCAN"
